buildscript {
	repositories {
		mavenCentral()
		maven { url "https://maven.fabricmc.net" }
		//maven { url "https://repo.sleeping.town" } //Commented out to use the version of voldeloom in the settings.gradle includeBuild (hopefully??)
	}
	dependencies {
		classpath "agency.highlysuspect:voldeloom:2.2-SNAPSHOT"
	}
}

apply plugin: "agency.highlysuspect.voldeloom"

java {
	toolchain {
		//Last version able to set a --release as low as 6.
		languageVersion = JavaLanguageVersion.of(11)
	}
}

compileJava {
	//Forge doesn't understand classes compiled to versions of the class-file format newer than Java 6's.
	options.release.set(6)
}

String minecraftVersion = "1.7.10"
String forgeVersion = "1.7.10-10.13.4.1614-1.7.10" //Yes it actually specifies the mc version twice

volde {
	runs {
		client {
			programArg "--username=quaternary"
			programArg "--assetIndex=1.7.10" //todo move into launcher
			programArg "--userProperties={}" //required to launch (that is an empty json object)
			programArg "--accessToken=69" //required to launch
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraftVersion}"
	forge "net.minecraftforge:forge:${forgeVersion}:universal"
	
	//TODO: una told me the MCP mappings in the Forge zip are not actually used, and i should use mcpbot exports instead
	mappings volde.layered {
		//baseZip("https://github.com/MinecraftForge/MinecraftForge/archive/refs/heads/1.7.10.zip")
		classes("https://mcpbot.unascribed.com/mcp/1.7.10/mcp-1.7.10-csrg.zip")
		fieldsMethods("https://mcpbot.unascribed.com/mcp_stable/12-1.7.10/mcp_stable-12-1.7.10.zip")
	}
}