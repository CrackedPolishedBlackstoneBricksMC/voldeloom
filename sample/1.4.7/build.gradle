buildscript {
	repositories {
		mavenCentral()
		maven { url "https://maven.fabricmc.net" }
		//maven { url "https://repo.sleeping.town" } //Commented out to use the version of voldeloom in the settings.gradle includeBuild (hopefully??)
	}
	dependencies {
		classpath "agency.highlysuspect:voldeloom:1.0+1.4.7disaster"
	}
}

apply plugin: "agency.highlysuspect.voldeloom"

java {
	toolchain {
		//Last version able to set a --release as low as 6.
		languageVersion = JavaLanguageVersion.of(11)
	}
}

compileJava {
	//Forge doesn't understand classes compiled to versions of the class-file format newer than Java 6's.
	options.release.set(6)
}

String minecraftVersion = "1.4.7"
String forgeVersion = "1.4.7-6.6.2.534"

minecraft {
	runs {
		client {
			programArg "quaternary"
		}
		
		//(please excuse me while i mess with the toolchains feature i just added...)
		
		//fails at runtime for the obvious reason
		clientWithJava17Lol {
			client()
			runToolchainVendor = JvmVendorSpec.ADOPTIUM
			runToolchainVersion = 17
		}
		
		//fails at runtime, but at least it was able to parse the toolchain out of the JavaToolchainSpec object
		//did u know the plugin is binary compatible with gradle 4 and JvmToolchainSpec didn't exist yet? :)
		clientWithBuildToolchain {
			client()
			toolchain = java.getToolchain()
		}
		
		//fails at task-execute time because there's no microsoft java 8 jdk
		clientWithMicrosoft {
			client()
			runToolchainVendor = JvmVendorSpec.MICROSOFT
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraftVersion}"
	forge "net.minecraftforge:forge:${forgeVersion}:universal@zip"
	mappings "net.minecraftforge:forge:${forgeVersion}:src@zip"
	
	coremodImplementation files("../dep_testin/ears-forge-1.4-1.4.5_01.jar")
	modImplementation files("../dep_testin/buildcraft-A-1.4.7-3.4.4.jar")
}